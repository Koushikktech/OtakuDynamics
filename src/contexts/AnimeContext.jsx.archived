import { createContext, useState, useContext, useEffect } from "react";

const AnimeContext = createContext();

export const useAnimeContext = () => useContext(AnimeContext);

export const AnimeProvider = ({ children }) => {
  console.log(localStorage.getItem("favorites"));
  const [favorites, setFavorites] = useState([]);

  useEffect(() => {
    try {
      const storedFavs = localStorage.getItem("favorites");
      if (storedFavs) setFavorites(JSON.parse(storedFavs));
    } catch (err) {
      setFavorites([]);
      localStorage.removeItem("favorites");
      console.error("Failed to parse favorites from localStorage", err);
    }
  }, []);

  useEffect(() => {
    localStorage.setItem("favorites", JSON.stringify(favorites));
  }, [favorites]);

  const addFavorites = (anime) => {
    setFavorites((prev) => {
      if (prev.some((a) => a.id === anime.id)) return prev;
      return [...prev, anime];
    });
  };

  const removeFavorites = (animeId) => {
    setFavorites((prev) => prev.filter((anime) => anime.id !== animeId));
  };

  const isFavorites = (animeId) => {
    return favorites.some((anime) => anime.id === animeId);
  };

  const value = {
    favorites,
    addFavorites,
    removeFavorites,
    isFavorites,
  };

  return (
    <AnimeContext.Provider value={value}>{children}</AnimeContext.Provider>
  );
};
